{"version":3,"sources":["components/Conditional/index.js","components/Loading/index.js","components/ArtistBanner/index.js","components/ArtistsList/index.js","components/Links/index.js","components/Releases/index.js","components/ReleasePlayer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Conditional","this","props","condition","children","PropTypes","any","bool","isRequired","Component","Loading","id","height","width","radius","margin","color","undefined","colour","ArtistBanner","artistInfo","catalogue","artist","Row","className","style","backgroundImage","cover","Col","name","bio","ArtistList","selectArtistHandler","bind","e","selectArtist","target","dataset","List","artists","map","artistTitle","ListGroupItem","onClick","data-artist","ListGroup","Links","Object","entries","links","title","link","href","Releases","state","release","selectReleaseHandler","selectRelease","releases","releaseData","releaseTitle","data-release","TrackList","playingid","selectTrackHandler","tracks","trackInfo","idx","trackTitle","downloads","DownloadLinks","trackFile","trackFileExtension","split","slice","toUpperCase","trackFileName","Badge","variant","saveAs","info","data-playingid","md","lg","icon","xs","sm","length","library","add","far","faPlayCircle","fas","faDownload","ReleasePlayer","playing","loading","credits","writing","performance","production","engineering","quality","loadTrack","playPauseHandler","waveform","React","createRef","wavesurfer","WaveSurfer","create","container","current","waveColor","progressColor","responsive","fillParent","backend","cursorWidth","stateUpdate","setState","stream","on","play","progress","isPlaying","params","opacity","stop","empty","destroy","uri","axios","get","load","data","console","log","playingidSrc","parseInt","playPause","pause","releaseInfo","hasEngineeringCredits","hasPerformanceCredits","hasProductionCredits","hasWritingCredits","hasCredits","size","ref","alt","src","keys","options","release_links","credits_engineering","join","credits_performance","credits_production","credits_writing","App","showReleases","location","updateState","appOptionsResult","catalogueResult","set","Container","fluid","Helmet","logo","Image","Card","Header","roster","ArtistsList","artist_info","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c2250e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Conditional extends Component {\n  static get propTypes () {\n    return {\n      children: PropTypes.any,\n      condition: PropTypes.bool.isRequired\n    }\n  }\n\n  render () {\n    if (this.props.condition === false) { return null }\n\n    return (\n      <>\n        {this.props.children}\n      </>\n    )\n  }\n}\n\nexport default Conditional\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport FadeLoader from 'react-spinners/FadeLoader'\n\nimport './style.css'\n\nclass Loading extends Component {\n  render () {\n    return (\n      <div id='loading-icon'>\n        <FadeLoader\n          height={32}\n          width={5}\n          radius={5}\n          margin={15}\n          color={\n            this.props.colour !== undefined ? this.props.colour : '#F5A623'\n          }\n        />\n      </div>\n    )\n  }\n}\n\nLoading.propTypes = {\n  colour: PropTypes.string\n}\n\nexport default Loading\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Row, Col } from 'react-bootstrap'\n\nimport './style.css'\n\nclass ArtistBanner extends Component {\n  render () {\n    const artistInfo = this.props.catalogue[this.props.artist]\n\n    return (\n      <Row\n        className='ArtistBanner'\n        style={{\n          height: 180,\n          backgroundImage: `url(${artistInfo.cover})`\n        }}\n      >\n        <Col>\n          <Row>\n            <Col>\n              <h3>{artistInfo.name}</h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p>{artistInfo.bio}</p>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nArtistBanner.propTypes = {\n  catalogue: PropTypes.object.isRequired,\n  artist: PropTypes.string.isRequired\n}\n\nexport default ArtistBanner\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\n\nclass ArtistList extends Component {\n  constructor (props) {\n    super(props)\n    this.selectArtistHandler = this.selectArtistHandler.bind(this)\n  }\n\n  selectArtistHandler (e) {\n    this.props.selectArtist(e.target.dataset.artist)\n  }\n\n  render () {\n    const List = this.props.artists.map((artist) => {\n      const artistTitle = (artist === this.props.artist)\n        ? (\n          <b>\n            {this.props.catalogue[artist].name}\n          </b>\n        )\n        : (\n          this.props.catalogue[artist].name\n        )\n\n      return (\n        <ListGroupItem\n          onClick={this.selectArtistHandler}\n          key={artist}\n          data-artist={artist}\n        >\n          {artistTitle}\n        </ListGroupItem>\n      )\n    })\n    return (<ListGroup>{List}</ListGroup>)\n  }\n}\n\nArtistList.propTypes = {\n  selectArtist: PropTypes.func.isRequired,\n  catalogue: PropTypes.object.isRequired,\n  artist: PropTypes.string.isRequired,\n  artists: PropTypes.array.isRequired\n\n}\n\nexport default ArtistList\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Links extends Component {\n  render () {\n    const Links = Object.entries(this.props.links).map(([title, link]) => {\n      return (<li key={title}><a href={link}>{title}</a></li>)\n    })\n\n    return (<ul>{Links}</ul>)\n  }\n}\n\nLinks.propTypes = {\n  links: PropTypes.object.isRequired\n}\n\nexport default Links\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ListGroupItem } from 'react-bootstrap'\n\nclass Releases extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { ...{ artist: '', release: '' }, ...props }\n\n    this.selectReleaseHandler = this.selectReleaseHandler.bind(this)\n  }\n\n  selectReleaseHandler (e) {\n    this.props.selectRelease(e.target.dataset.release)\n  }\n\n  render () {\n    if (this.props.artist === undefined || this.props.artist === '') {\n      return <></>\n    }\n\n    if (this.props.catalogue[this.props.artist].releases === undefined) {\n      return <></>\n    }\n\n    const List = Object.entries(\n      this.props.catalogue[this.props.artist].releases\n    ).map(([release, releaseData]) => {\n      const releaseTitle = release === this.props.release\n        ? (\n          <b>{releaseData.title}</b>\n        )\n        : (\n          releaseData.title\n        )\n      return (\n        <ListGroupItem key={release} onClick={this.selectReleaseHandler} data-release={release}>\n          {releaseTitle}\n        </ListGroupItem>\n      )\n    })\n\n    return List\n  }\n}\n\nReleases.propTypes = {\n  selectRelease: PropTypes.func.isRequired,\n  catalogue: PropTypes.object.isRequired,\n  artist: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired\n}\n\nexport default Releases\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Row, Col, ListGroup, ListGroupItem, Badge } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { far, faPlayCircle } from '@fortawesome/free-regular-svg-icons'\nimport { fas, faDownload } from '@fortawesome/free-solid-svg-icons'\n\nimport WaveSurfer from 'wavesurfer.js'\n\nimport { saveAs } from 'file-saver'\n\nimport axios from 'axios'\n\nimport Conditional from '../Conditional'\nimport Loading from '../Loading'\nimport Links from '../Links'\n\nimport './style.css'\n\nlibrary.add(far, faPlayCircle, fas, faDownload)\n\nfunction TrackList ({\n  catalogue,\n  artist,\n  release,\n  playingid,\n  selectTrackHandler,\n  tracks\n}) {\n  const List = tracks.map(\n    (trackInfo, idx) => {\n      const trackTitle =\n        idx === playingid\n          ? <b>{trackInfo.title}</b>\n          : trackInfo.title\n\n      const downloads = trackInfo.downloads || []\n\n      const DownloadLinks = downloads.map((trackFile, idx) => {\n        const trackFileExtension = trackFile.split('.').slice(-1)[0].toUpperCase()\n        const trackFileName = trackFile.split('/').slice(-1)[0]\n\n        return (<Badge key={idx} variant=\"info\" className=\"TrackButton\" onClick={() => { saveAs(trackFile, trackFileName) }}>{trackFileExtension}</Badge>)\n      })\n\n      return (\n        <ListGroupItem key={idx} className=\"Track\">\n          <Row className={trackInfo.info === undefined ? 'snug' : ''}>\n            <Col onClick={selectTrackHandler} data-playingid={idx} md={12} lg={8}>\n              <FontAwesomeIcon\n                icon={['far', 'play-circle']}\n              />{' '}\n              {trackTitle}\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={4}>\n              <Conditional condition={downloads.length > 0}>\n                <span className=\"pull-right\"><FontAwesomeIcon icon={['fa', 'download']} />&nbsp;{DownloadLinks}</span>\n              </Conditional>\n            </Col>\n          </Row>\n          <Conditional condition={trackInfo.info !== undefined}>\n            <Row className=\"snug track-info\">\n              <Col xs={12}>\n                <q>{trackInfo.info}</q>\n              </Col>\n            </Row>\n          </Conditional>\n        </ListGroupItem>\n      )\n    }\n  )\n  return List\n}\n\nclass ReleasePlayer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ...{\n        artist: '',\n        release: '',\n        playingid: 0,\n        catalogue: {},\n        playing: false,\n        loading: true,\n        tracks: [],\n        info: '',\n        credits: {\n          writing: [],\n          performance: [],\n          production: [],\n          engineering: []\n        },\n        quality: 'default'\n      },\n      ...props\n    }\n\n    this.loadTrack = this.loadTrack.bind(this)\n    this.selectTrackHandler = this.selectTrackHandler.bind(this)\n    this.playPauseHandler = this.playPauseHandler.bind(this)\n\n    this.waveform = React.createRef()\n  }\n\n  componentDidMount () {\n    this.wavesurfer = WaveSurfer.create({\n      container: this.waveform.current,\n      waveColor: 'grey',\n      progressColor: 'purple',\n      responsive: true,\n      fillParent: true,\n      backend: 'MediaElement',\n      cursorWidth: 0\n    })\n\n    const release = this.props.catalogue[this.props.artist].releases[this.props.release]\n\n    const tracks = release.tracks\n\n    const info = release.info !== undefined ? release.info : ''\n    const credits = release.credits !== undefined ? release.credits : { writing: [], production: [], engineering: [] }\n\n    let stateUpdate = {}\n    stateUpdate = { ...stateUpdate, ...{ tracks, info, credits } }\n\n    this.setState(stateUpdate)\n\n    this.loadTrack(tracks[this.state.playingid].stream[this.state.quality])\n\n    this.wavesurfer.on('ready', () => {\n      this.wavesurfer.play()\n      this.setState({ loading: false, playing: true })\n    })\n\n    this.wavesurfer.on('seek', (progress) => {\n      if (!this.wavesurfer.isPlaying()) { this.wavesurfer.play() }\n\n      this.setState({ playing: this.wavesurfer.isPlaying() })\n    })\n\n    this.wavesurfer.on('finish', () => {\n      this.setState({ loading: true })\n\n      const playingid = ((this.state.playingid + 1) % this.state.tracks.length)\n\n      this.loadTrack(tracks[playingid].stream[this.state.quality])\n\n      this.setState({ playingid: playingid, playing: true })\n    })\n\n    this.wavesurfer.on('pause', () => {\n      this.wavesurfer.params.container.style.opacity = 0.7\n    })\n\n    this.wavesurfer.on('play', () => {\n      this.wavesurfer.params.container.style.opacity = 1\n    })\n  }\n\n  componentWillUnmount () {\n    this.wavesurfer.stop()\n    this.wavesurfer.empty()\n    this.wavesurfer.destroy()\n  }\n\n  async loadTrack (uri) {\n    let waveform = null\n\n    try {\n      waveform = await axios.get(uri + '.json')\n\n      this.wavesurfer.load(uri, waveform.data.data)\n    } catch (e) {\n      console.log('Error loading waveform data. Skipping...')\n\n      this.wavesurfer.load(uri)\n    }\n  }\n\n  selectTrackHandler (e) {\n    const playingidSrc = e.target.dataset.playingid\n    const playingid = parseInt(playingidSrc)\n\n    if (playingidSrc === undefined) {\n      this.wavesurfer.playPause()\n      this.setState({ playing: this.wavesurfer.isPlaying() })\n    } else if (this.props.catalogue[this.props.artist].releases[this.props.release].tracks[playingid] !== undefined && playingid !== this.state.playingid) {\n      this.wavesurfer.pause()\n      this.setState({ loading: true })\n      this.loadTrack(this.state.tracks[playingid].stream[this.state.quality])\n      this.setState({ playingid: playingid, playing: true })\n    }\n  }\n\n  playPauseHandler () {\n    this.wavesurfer.playPause()\n    this.setState({ playing: this.wavesurfer.isPlaying() })\n  }\n\n  render () {\n    if (this.props.artist === undefined || this.props.release === undefined || this.props.artist === '' || this.props.release === '') { return <></> }\n\n    const releaseInfo = this.props.catalogue[this.props.artist].releases[this.props.release]\n\n    const credits = {}\n    credits.engineering = (releaseInfo.credits !== undefined && releaseInfo.credits.engineering !== undefined) ? releaseInfo.credits.engineering : []\n    credits.performance = (releaseInfo.credits !== undefined && releaseInfo.credits.performance !== undefined) ? releaseInfo.credits.performance : []\n    credits.production = (releaseInfo.credits !== undefined && releaseInfo.credits.production !== undefined) ? releaseInfo.credits.production : []\n    credits.writing = (releaseInfo.credits !== undefined && releaseInfo.credits.writing !== undefined) ? releaseInfo.credits.writing : []\n    const hasEngineeringCredits = credits.engineering.length > 0\n    const hasPerformanceCredits = credits.performance.length > 0\n    const hasProductionCredits = credits.production.length > 0\n    const hasWritingCredits = credits.writing.length > 0\n\n    const hasCredits = hasEngineeringCredits || hasPerformanceCredits || hasProductionCredits || hasWritingCredits\n\n    return (\n      <>\n        <Row>\n          <Col xs={12} sm={12} md={8} lg={8}>\n            <h4>{releaseInfo.title}</h4>\n            <Row>\n              <Col>\n                <div id=\"PlayPause\">\n                  <FontAwesomeIcon icon={['far', (this.state.playing === true ? 'pause-circle' : 'play-circle')]} size=\"3x\" onClick={this.playPauseHandler} />\n                </div>\n                <div id='waveform' ref={this.waveform}>\n                  <Conditional condition={this.state.loading}>\n                    <Loading colour=\"#eeeeee\" />\n                  </Conditional>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <ListGroup>\n                  <TrackList artist={this.props.artist} release={this.props.release} catalogue={this.props.catalogue} playingid={this.state.playingid} tracks={this.state.tracks} selectTrackHandler={this.selectTrackHandler} />\n                </ListGroup>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={12} sm={12} md={4} lg={4}>\n            <Row>\n              <img className='ReleaseCover' alt='Release Cover' src={releaseInfo.cover} />\n            </Row>\n            <Conditional condition={releaseInfo.info !== undefined}>\n              <Row>\n                <b>Release Info</b>\n              </Row>\n              <Row>\n                {releaseInfo.info}\n              </Row>\n            </Conditional>\n            <Conditional condition={releaseInfo.links !== undefined && typeof releaseInfo.links === 'object' && Object.keys(releaseInfo.links).length > 0}>\n              <Row>\n                <b>{this.props.options.release_links}</b>\n              </Row>\n              <Row>\n                <Links links={releaseInfo.links} />\n              </Row>\n            </Conditional>\n            <Conditional condition={hasCredits === true}>\n              <Row className=\"snug\">\n                <b>{this.props.options.credits}</b>\n              </Row>\n              <Conditional condition={hasEngineeringCredits}>\n                <Row className=\"snug\">\n                  <b>{this.props.options.credits_engineering}</b>\n                </Row>\n                <Row className=\"snug\">\n                  <i>{credits.engineering.join(', ')}</i>\n                </Row>\n              </Conditional>\n              <Conditional condition={hasPerformanceCredits}>\n                <Row className=\"snug\">\n                  <b>{this.props.options.credits_performance}</b>\n                </Row>\n                <Row className=\"snug\">\n                  <i>{credits.performance.join(', ')}</i>\n                </Row>\n              </Conditional>\n              <Conditional condition={hasProductionCredits}>\n                <Row className=\"snug\">\n                  <b>{this.props.options.credits_production}</b>\n                </Row>\n                <Row className=\"snug\">\n                  <i>{credits.production.join(', ')}</i>\n                </Row>\n              </Conditional>\n              <Conditional condition={hasWritingCredits}>\n                <Row className=\"snug\">\n                  <b>{this.props.options.credits_writing}</b>\n                </Row>\n                <Row className=\"snug\">\n                  <i>{credits.writing.join(', ')}</i>\n                </Row>\n              </Conditional>\n            </Conditional>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\nReleasePlayer.propTypes = {\n  catalogue: PropTypes.object.isRequired,\n  artist: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired\n}\n\nexport default ReleasePlayer\n","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport { Container, Row, Col, ListGroup, Card, Image } from 'react-bootstrap'\n\nimport axios from 'axios'\n\nimport Conditional from './components/Conditional'\nimport Loading from './components/Loading'\nimport ArtistBanner from './components/ArtistBanner'\nimport ArtistsList from './components/ArtistsList'\nimport Links from './components/Links'\nimport Releases from './components/Releases'\nimport ReleasePlayer from './components/ReleasePlayer'\n\nimport './App.css'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      artists: [],\n      catalogue: {},\n      loading: true,\n      artist: '',\n      release: '',\n      showReleases: false,\n      bio: '',\n      location: '',\n      links: {}\n    }\n\n    this.selectArtist = this.selectArtist.bind(this)\n    this.selectRelease = this.selectRelease.bind(this)\n  }\n\n  async componentDidMount () {\n    let updateState = {}\n\n    updateState.loading = this.state.loading\n    const appOptionsResult = await axios.get('/buddy.json')\n\n    updateState.options = appOptionsResult.data\n\n    const catalogueResult = await axios.get('/catalogue.json')\n\n    const catalogue = catalogueResult.data\n    const artists = Object.keys(catalogueResult.data)\n    updateState.catalogue = { ...catalogue, ...{ artists } }\n\n    if (artists.length === 1) {\n      const artist = artists[0]\n\n      updateState = {\n        ...updateState,\n        ...{\n          artist,\n          artists,\n          bio: catalogue[artist].bio,\n          location: catalogue[artist].location,\n          links: catalogue[artist].links\n        },\n        ...catalogue[artist]\n      }\n    }\n\n    updateState.loading = false\n\n    this.setState(updateState)\n  }\n\n  selectArtist (artist) {\n    let set = { artist: '', release: '', showReleases: false }\n\n    if (artist !== undefined) {\n      set = {\n        ...set,\n        ...{\n          artist,\n          bio: this.state.catalogue[artist].bio,\n          location: this.state.catalogue[artist].location,\n          links: this.state.catalogue[artist].links\n        },\n        ...this.state.catalogue[artist]\n      }\n    }\n\n    if (artist !== this.state.artist) set.release = ''\n\n    this.setState(set)\n  }\n\n  selectRelease (release) {\n    let set = { release: '', showReleases: false }\n\n    if (release !== undefined) {\n      set = { ...set, ...{ release, showReleases: true } }\n    }\n\n    this.setState(set)\n  }\n\n  render () {\n    if (this.state.loading) return <Loading />\n\n    return (\n      <Container fluid=\"lg\">\n        <Helmet>\n          <title>{this.state.options.title}</title>\n        </Helmet>\n        <Row>\n          <Col>\n            <h1><Conditional condition={this.state.options.logo !== undefined}><Image src={this.state.options.logo} /></Conditional> {this.state.options.title !== undefined ? this.state.options.title : 'AlbumBuddy'}</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4} lg={3}>\n            <Conditional condition={this.state.artists.length > 1}>\n              <Row>\n                <Col>\n                  <Card>\n                    <Card.Header>\n                      <b>{this.state.options.roster}</b>\n                    </Card.Header>\n                  </Card>\n                  <ArtistsList\n                    artist={this.state.artist}\n                    artists={this.state.artists}\n                    catalogue={this.state.catalogue}\n                    selectArtist={this.selectArtist}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                </Col>\n              </Row>\n            </Conditional>\n            <Conditional condition={this.state.artist !== ''}>\n              <Conditional condition={this.state.bio !== ''}>\n                <Row>\n                  <Col>\n                    <Card>\n                      <Card.Header>\n                        <b>{this.state.options.artist_info}</b>\n                      </Card.Header>\n                      <Card.Body>\n                        <Conditional condition={this.state.location !== ''}>\n                          <Row>\n                            <Col><b>{this.state.options.location}:</b> {this.state.location}</Col>\n                          </Row>\n                        </Conditional>\n                        <Row>\n                          <Col>\n                            <i> {this.state.bio} </i>\n                          </Col>\n                        </Row>\n\n                        <Conditional condition={Object.keys(this.state.links).length > 0}>\n                          <Row>\n                            <Col>\n                              <b>{this.state.options.links}:</b><br />\n                              <Links links={this.state.links}/>\n                            </Col>\n                          </Row>\n                        </Conditional>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              </Conditional>\n              <Row>\n                <Col><b>{this.state.options.releases}:</b></Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ListGroup>\n                    <Releases\n                      artist={this.state.artist}\n                      release={this.state.release}\n                      catalogue={this.state.catalogue}\n                      selectRelease={this.selectRelease}\n                    />\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Conditional>\n          </Col>\n          <Col md={8} lg={9}>\n            <Conditional condition={this.state.artist !== ''}>\n              <ArtistBanner\n                artist={this.state.artist}\n                catalogue={this.state.catalogue}\n              />\n              <br />\n              <Conditional condition={this.state.showReleases === true}>\n                <ReleasePlayer\n                  artist={this.state.artist}\n                  release={this.state.release}\n                  catalogue={this.state.catalogue}\n                  options={this.state.options}\n                />\n              </Conditional>\n            </Conditional>\n          </Col>\n          <Col>\n              &nbsp;\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}